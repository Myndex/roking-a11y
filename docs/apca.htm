<!DOCTYPE html>
<html lang="en-US">
	<head>
		<meta charset="utf-8">
		<title>Roking-A11y APCA Evaluator</title>
		<style type="text/css">
			body {
				margin: auto;
				user-select: none;
				width: 80%;
			}
			button {
				border-radius: 0.25rem;
				font-size: 1.5rem;
				margin: 0.2rem
			}
			button:not([disabled]) {
				background-color: hsl(204, 100%, 60%);
				border: 0.0625em solid hsl(204, 100%, 30%);
				color: hsl(204, 100%, 5%);
			}
			h1 + div {
				display: flex;
			}
			input[type="text"] {
				background-color: transparent;
				background-position: center;
				background-size: contain;
				border: 1px solid hsl(204, 100%, 40%);
				border-radius: 0.25em;
				font-family: monospace;
				font-size: 1.1rem;
				text-align: center;
				width: 8em;
			}
			input[aria-invalid="true"] {
				border-color: #e00;
			}
			input, label {
				display: block;
				width: 100%;
			}
			tbody td[id^="results"] {
				font-family: monospace;
				min-width: 6em;
				text-align: right;
			}
			tfoot th, tfoot td {
				text-align: right;
			}
		</style>
	</head>
	<body>
		<main>
			<h1>Roking-A11y APCA Evaluator</h1>
			<p>
				Because of the way color is <em>perceived</em>, light text on a dark background is
				perceived differently than dark text on a light background. This means how the <em>Luminance 
				Contrast</em> is calculated should account for the polarity.
			</p>
			<p>
				In the results table, generated by clicking the <em>Calculate</em> button, columns show the
				minimum contrast for various font sizes. If the contrast is greater than or equal to the
				minimum contrast value for a particular font size, the font weight for that entry will be
				<em>bold</em>.
			</p>
			<div>
				<table style="align-self: flex-start;">
					<thead>
						<tr>
							<th>Type</th>
							<th id="background-label">Background</th>
							<th id="foreground-label">Foreground</th>
							<th>Result</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<th id="r1">Dark text on light background</th>
							<td>
								<input aria-labelledBy="r1 background-label" id="background" type="text" value="#fff"/>
							</td>
							<td>
								<input aria-labelledBy="r1 foreground-label" id="foreground" type="text" value="#000"/>
							</td>
							<td id="results"></td>
						</tr>
						<tr>
							<th id="r2">Light text on a dark background</th>
							<td>
								<input aria-labelledBy="r2 background-label" id="background-reverse" type="text" value="#000"/>
							</td>
							<td>
								<input aria-labelledBy="r2 foreground-label" id="foreground-reverse" type="text" value="#fff"/>
							</td>
							<td id="results-reverse"></td>
						</tr>
					</tbody>
					<tfoot>
						<tr>
							<td colspan="4">
								<button type="button" onclick="onClick()">Calculate</button>
							</td>
					</tfoot>
				</table>
				<div id="fonts"></div>
			</div>
		</main>
		
		<script src="apca.min.js"></script>
		<script>
			function onClick() {
			  const bgn = document.getElementById('background').value;
			  const txn = document.getElementById('foreground').value;
			  const bgr = document.getElementById('background-reverse').value;
			  const txr = document.getElementById('foreground-reverse').value;

			  const apca = new APCA({background: bgn, foreground: txn});
			  const rapc = new APCA({background: bgr, foreground: txr});

			  document.getElementById('results').innerHTML = apca.score();
			  document.getElementById('results-reverse').innerHTML = rapc.score();
			  document.getElementById('fonts').innerHTML = '';
			  document.getElementById('fonts').appendChild(apca.Fonts.toHtml());
			}
			onClick();
		</script>
	</body>
</html>
