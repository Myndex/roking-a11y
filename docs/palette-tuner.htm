<!DOCTYPE html>
<html lang="en-US">
	<head>
		<meta charset="utf-8">
		<title>ROKING-A11Y Palette Tuner</title>
		<style type="text/css">
			body {
				margin: auto;
				user-select: none;
				width: 80%;
			}
			button {
				border-radius: 0.25rem;
				font-size: 1.5rem;
				margin: 0.2rem
			}
			button:not([disabled]) {
				background-color: hsl(204, 100%, 60%);
				border: 0.0625em solid hsl(204, 100%, 30%);
				color: hsl(204, 100%, 5%);
			}
			div.input {
				align-items: center;
				display: flex;
			}
			div.input > * {
				height: 100%;
			}
			h1 {
				background: url(https://hrobertking.github.io/roking-a11y/palette-lg.png) center right no-repeat;
				background-size: contain;
			}
			label,
			textarea {
				display: block;
				width: 100%;
			}
			label {
				font-size: 0.8rem;
				font-style: italic;
			}
			table {
				border: 1px solid hsl(204, 100%, 30%);
				border-collapse: collapse;
				margin-bottom: 3em;
				width: 100%;
			}
			td,
			th {
				font-family: monospace;
				padding: 0.5rem;
			}
			td {
				text-align: center;
				user-select: text;
				vertical-align: top;
			}
			thead td:first-of-type,
			tbody th:first-of-type {
				max-width: 8em;
				text-align: right;
				border-right: 1px solid hsl(204, 100%, 30%);
				font-weight: bold;
				vertical-align: center;
			}
			tbody td {
				background-color: #ddd;
				vertical-align: middle;
			}
			thead {
				border-bottom: 1px solid hsl(204, 100%, 30%);
				font-weight: bold;
			}
			thead th {
				vertical-align: bottom;
			}
			thead > tr:last-of-type > th {
				border-bottom: 0.1rem solid hsl(204, 100%, 30%);
			}
			th[scope='col'] > div > span:first-of-type {
				border: 1px solid #000;
				border-radius: 50%;
				display: inline-block;
				flex-grow: 0;
				flex-shrink: 0;
				height: 0.75em;
				margin-right: 0.25em;
				width: 0.75em;
			}
			th[scope="row"] {
				text-align: right;
				vertical-align: top;
			}
			noscript.warning::before,
			p.warning::before {
				content: 'âš ' !important;
			}

			.pic {
				border: 1px solid #000;
				border-radius: 0.25em;
				display: inline-block;
				height: 1em;
				margin-right: 0.5em;
				width: 1em;
			}

			.fail {
				background-color: rgb(255, 148, 141);
				color: #000;
			}
			.pass {
				background-color: rgb(148, 255, 141);
				color: #000;
				font-variant: italic;
				font-weight: bold;
			}
			.some {
				background-color: rgb(255, 255, 157);
				color: #000;
				font-variant: italic;
			}

			input[type="checkbox"] + label {
				display: inline-flex;
			}
			input[type="checkbox"].toggle {
				clip-path: polygon(0 0, 0 0, 0 0, 0 0);
				clip: rect(0, 0, 0, 0);
				position: absolute;
			}
			.toggle + label .channel {
				border: 1px solid #000;
				border-radius: 1em;
				display: block;
				height: 1em;
				margin-left: 0.5em;
				position: relative;
				width: 2em;
			}
			.toggle + label .channel::before {
				background: radial-gradient(#fff, #333);
				border: 1px solid #333;
				border-radius: 50%;
				content: '';
				display: inline-block;
				height: .9em;
				position: absolute;
				width: .9em;
			}
			.toggle:checked + label .channel:before {
				right: 0;
			}

			@media screen and (min-width: 960px) {
				.small-viewport {
					display: none;
				}
			}
		</style>
	</head>
	<body>
		<main>
			<h1>ROKING-A11Y Palette Tuner</h1>
			<p>The <em>Roking-A11y Palette Tuner</em> performs luminance contrast testing for multiple colors in a palette, creating
				a matrix that allows easy reference to multiple contrast ratios simultaneously.
				Other <em>Roking-A11y</em> tools can be found in <a href="https://hrobertking.github.io/roking-a11y/">the central respository.</a>
			</p>
			<p><em>Luminance contrast</em> is not about color, per se, but about <em>brightness</em>. In the
				<a href="https://www.w3.org/TR/WCAG21/">Web Content Accessibility Guidelines (WCAG)</a>, there are
				two methods for calculating brightness, one is a general brightness level that's used to determine
				whether or not a change in brightness is a <em>flash</em> and the other is brightness relative
				to an element's surroundings, or in other words, the brightness of the foreground compared to the
				brightness of the background.
			</p>
			<p>The WCAG identifies three thresholds that can be use to determine whether or not an element is easily perceived.
				The thresholds for text on a background are higher than for non-text, and are relative to the <em>size</em>
				or <em>weight</em> of the font. The <em>Palette Tuner</em> calculates the contrast and provides the raw
				number, allowing the user to determine whether the foreground/background values are appropriate for non-text,
				normal text, or large or bold text.
			</p>
			<noscript class="warning">
				This utility relies on JavaScript to perform the calculations for luminance and contrast. The page will not
				function without it.
			</noscript>
			<p class="small-viewport warning">
				The device you are using does not have enough horizontal landscape to prevent scrolling. It is recommended
				that you switch to a device that is at least 960 pixels wide.
			</p>
			<p>
				This tool allows you to provide a list of colors comprising a color pallete in the input labelled
				<em><strong>Palette</strong></em>, as a comma-separated list of hexadecimal values and will calculate the contrast
				between each of the colors in the palette when the <em><strong>Calculate</strong></em> button is activated.
				As an example, a palette of white (#ffffff), yellow (#ffff00), magenta (#ff00ff), red (#ff0000), light blue (#00ffff),
				green (#00ff00), blue (#0000ff), and black (#000000) is provided. Clicking or tapping the <em><strong>Calculate</strong></em>
				button will generate the example matrix. Replace the palette list with your own colors, and activate the
				<em><strong>Calculate</strong></em> button to get <em>your</em> matrix. Visually, <em>luminance contrast</em> values of 3
				and more, suitable for <em>non-text</em> purposes, are in italics on a light yellow background and values of 4.5 and more,
				suitable for <em>text</em> or <em>non-text</em> purposes, are in italic and bold on a light green background. Values less
				than 3, which are unsuitable for anything other than decorative purposes, are shown in normal text on a light red
				background.
			</p>

			<p>
				The palette input has been enhanced to take two different specifications. The default example is a comma-separated
				list of hexadecimal color values. A JSON object is also acceptable, where a color is defined using a <em>name</em>
				and <em>value</em>. The example value can be switched using this <em>Show object example</em> toggle.

				<input id="asObject" class="toggle" type="checkbox" onchange="showObject()" />
				<label for="asObject"><span>Show object example</span><span class="channel"></span></label>
			</p>
			<p class="warning">
				Clicking <em>Show object example</em> will reset the text in the palette definition input.
			</p>
			
			<label for="list">
				<em><strong>Palette</strong></em><br />
				Enter color strings as a comma-separated list
			</label>
			<div class="input">
				<textarea id="list">#ffffff,#ffff00,#ff00ff,#ff0000,#00ffff,#00ff00,#0000ff,#000000</textarea>
				<button id="calculate">Calculate</button>
			</div>

			<div id="table-results">
				<table id="results">
					<caption>Luminance Contrast</caption>
					<thead>
						<tr>
							<th></th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td></td>
						</tr>
					</tbody>
				</table>
			</div>
		</main>

		<script src="matrix.min.js"></script>
		<script>
			function calculate() {
				var list = document.getElementById('list').value,
					norm = (list || '').replace(/\n/g, '').replace(/^,|,$/g, '');
					lum = new Matrix(norm);

				reset();
				document.getElementById('table-results').appendChild(lum.toHtmlTable())
			}
			function reset() {
				document.getElementById('table-results').innerHTML = '';
			}
			function showObject() {
				var checked = document.getElementById('asObject').checked;

				document.getElementById('list').value = checked
					? '{"name":"white", "value":"#ffffff"},{"name":"yellow", "value":"#ffff00"},{"name":"magenta","value":"#ff00ff"},{"name":"red","value":"#ff0000"},{"name":"cyan","value":"#00ffff"},{"name":"green","value":"#00ff00"},{"name":"blue","value":"#0000ff"},{"name":"black","value":"#000000"}'
					: '#ffffff,#ffff00,#ff00ff,#ff0000,#00ffff,#00ff00,#0000ff,#000000';
			}

			document.getElementById('calculate').addEventListener('click', calculate);
		</script>
	</body>
</html>
